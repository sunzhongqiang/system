<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="LOG_HOME" value="/data/log/" />  
	
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/log.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	
	<appender name="APP_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/web.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	<appender name="MESSAGE_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/msg.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	
	<appender name="API_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/api.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	
	<appender name="LOGIN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/login.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	
	<appender name="WATCH_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<FileNamePattern>${LOG_HOME}/watch.%d{yyyy-MM-dd}.log</FileNamePattern>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<encoder>
             <pattern>%d{HH:mm:ss.SSS} [%thread] [%-5level] %logger{36} ： %msg%n</pattern>  
        </encoder>
	</appender>
	
	<logger name="com.echin" >  
	    <level value="debug" />  
	    <appender-ref ref="APP_LOG" />  
	</logger>  
	  
	<logger name="com.echin.open" >  
	    <level value="debug" />  
	    <appender-ref ref="API_LOG" />  
	</logger>  
	<logger name="com.echin.user" >  
	    <level value="debug" />  
	    <appender-ref ref="LOGIN_LOG" />  
	</logger>  	
	
	<logger name="com.echin.tool" >  
	    <level value="info" />  
	    <appender-ref ref="WATCH_LOG" />  
	</logger>  
	
	<logger name="com.echin.tool" >  
	    <level value="info" />  
	    <appender-ref ref="WATCH_LOG" />  
	</logger> 
	<logger name="com.echin.goods">  
	    <level value="debug" />  
	    <appender-ref ref="WATCH_LOG" />  
	</logger>
	
	<root level="DEBUG">
		<appender-ref ref="FILE" />
		<appender-ref ref="APP_LOG" />
		<appender-ref ref="API_LOG" />
		<appender-ref ref="LOGIN_LOG" />
		<appender-ref ref="WATCH_LOG" />
	</root>
</configuration>